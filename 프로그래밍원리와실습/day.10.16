#include <stdio.h>
#include <stdlib.h>
#define MAXLINE 1000

// function declaration
int mygetline(char line[], int maxline);
void copy(char to[], char from[]); // to : target, from : source

int main()
{
    int len; // current length
    int max; // max length seen so far
    char line[MAXLINE];
    char longest[MAXLINE];
    
    max = 0;
    // Fix: Correct the spelling of MAXLINE
    while((len = mygetline(line, MAXLINE)) > 0) {
        if (len > max) {
            max = len;
            copy(longest, line);
        }
    }
    
    // Fix: Moved the printf statement outside the while loop
    if (max > 0) {
        printf("%s", longest);
    }
}

int mygetline(char s[], int lim)
{
    int c, i;
    for (i = 0; i < lim - 1 && (c = getchar()) != EOF && c != '\n'; ++i) {
        s[i] = c;
    }
    if (c == '\n') {
        s[i] = c;
        ++i;
    }
    s[i] = '\0';
    return i; // return length
}

void copy(char to[], char from[]) {
    int i;
    i = 0;
    while((to[i] = from[i]) != '\0') ++i;
}


/*
#include <stdio.h>
#include <stdlib.h>
int maxline = 10;
void myprintf(char s[]); // using putchar()

int main()
{
    int maxline = 20;
    printf("maxline: %d\n", maxline); //local is first
    for (int i=0, maxline = 40; i<2; i++, maxline++) { //block first
        //int maxline = 30;
        printf("maxline: %d\n", maxline);
    }
    char arr[100] = "Hello world!\n";
    myprintf(arr);
    maxline = 10;
    return 0;
}

void myprintf(char s[]) {
    for (int i=0; s[i] != '\0'; ++i) {
        putchar(s[i]);
    }
}
*/
