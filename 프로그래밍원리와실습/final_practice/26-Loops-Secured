#include <stdio.h>
#include <ctype.h>

int myatoi(char s[]);

int main()
{
    int n;
    char string[100] = " -1234";
    n = myatoi(string);
    
    printf("Converted number is %d\n", n);
}

/* atoi: convert s to integer; version 2 */
int myatoi(char s[])
{
    int i, n, sign;
    for (i = 0; isspace(s[i]); i++) /* skip white space */
        ;
    sign = (s[i] == '-') ? -1 : 1;
    
    if (s[i] == '+' || s[i] == '-') /* skip sign */
        i++;

    for (n = 0; isdigit(s[i]); i++)
        n = 10 * n + (s[i] - '0');
    
    return sign * n;
}

/*#include <stdio.h>
#include <string.h>

void reverse(char s[]);

int main()
{
    char msg[100] = "I feel good now";
    
    reverse(msg);
    
    printf("Result is %s\n", msg);
}

//reverse: reverse string s in place 
void reverse(char s[])
{
    int c, i, j;
    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {
        c = s[i];
        s[i] = s[j];
        s[j] = c;
    }
}*/

/*#include <stdio.h>
#include <string.h>
void myitoa(int n, char s[]);
void reverse(char s[]);

int main()
{
    int num = -1234;
    char num_string[100];
    
    myitoa(num, num_string);

    printf("Converted string: %s\n", num_string);
}

//reverse: reverse string s in place 
void reverse(char s[])
{
    int c, i, j;
    for (i = 0, j = strlen(s)-1; i < j; i++, j--) {
        c = s[i];
        s[i] = s[j];
        s[j] = c;
    }
}

//itoa: convert n to characters in s 
void myitoa(int n, char s[])
{
    int i, sign;
    
    if ((sign = n) < 0)  //record sign
    n = -n;  //make n positive
    
    i = 0;
    
    do { //generate digits in reverse order
        s[i++] = n % 10 + '0'; //get next digit
    } while ((n /= 10) > 0); //delete it
    
    if (sign < 0) s[i++] = '-';
    
    s[i] = '\0';
    reverse(s);
}
*/
